/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

#ifndef _Included_PortAudio
#define _Included_PortAudio
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     org_jpab_PortAudio
 * Method:    getVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_jpab_PortAudio_getVersion
  (JNIEnv *, jclass);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getVersionText
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_jpab_PortAudio_getVersionText
  (JNIEnv *, jclass);

/*
 * Class:     org_jpab_PortAudio
 * Method:    initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_jpab_PortAudio_initialize
  (JNIEnv *, jclass);

/*
 * Class:     org_jpab_PortAudio
 * Method:    terminate
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_jpab_PortAudio_terminate
  (JNIEnv *, jclass);

/*
 * Class:     org_jpab_PortAudio
 * Method:    abortStream
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_jpab_PortAudio_abortStream
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jpab_PortAudio
 * Method:    closeStream
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_jpab_PortAudio_closeStream
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jpab_PortAudio
 * Method:    free
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_org_jpab_PortAudio_free
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getDefaultHostAPIAsBuffer
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_org_jpab_PortAudio_getDefaultHostAPIAsBuffer
  (JNIEnv *, jclass);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getDeviceAsBuffer
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_org_jpab_PortAudio_getDeviceAsBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getDevicesAsBuffer
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_org_jpab_PortAudio_getDevicesAsBuffer
  (JNIEnv *, jclass);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getHostAPIAsBuffer
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_org_jpab_PortAudio_getHostAPIAsBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getHostAPIsAsBuffer
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_org_jpab_PortAudio_getHostAPIsAsBuffer
  (JNIEnv *, jclass);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getHostAPIsDevicesAsBuffer
 * Signature: (I)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_org_jpab_PortAudio_getHostAPIsDevicesAsBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getStreamCpuLoad
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_org_jpab_PortAudio_getStreamCpuLoad
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jpab_PortAudio
 * Method:    getStreamTime
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_org_jpab_PortAudio_getStreamTime
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jpab_PortAudio
 * Method:    isFormatSupported
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_org_jpab_PortAudio_isFormatSupported
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_jpab_PortAudio
 * Method:    isStreamActive
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_jpab_PortAudio_isStreamActive
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jpab_PortAudio
 * Method:    isStreamStopped
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_jpab_PortAudio_isStreamStopped
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jpab_PortAudio
 * Method:    openStream
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_org_jpab_PortAudio_openStream
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_jpab_PortAudio
 * Method:    startStream
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_jpab_PortAudio_startStream
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_jpab_PortAudio
 * Method:    stopStream
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_jpab_PortAudio_stopStream
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif