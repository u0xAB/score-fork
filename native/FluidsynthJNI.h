/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class Fluidsynth */

#ifndef _Included_Fluidsynth
#define _Included_Fluidsynth
#ifdef __cplusplus
extern "C" {
#endif
#undef Fluidsynth_NAME_MAX_LENGTH
#define Fluidsynth_NAME_MAX_LENGTH 32L
/*
 * Class:     Fluidsynth
 * Method:    init
 * Signature: (Ljava/lang/String;IIIFLjava/lang/String;Ljava/lang/String;IIFFFFF)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_Fluidsynth_init
  (JNIEnv *, jclass, jstring, jint, jint, jint, jfloat, jstring, jstring, jint, jint, jint, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     Fluidsynth
 * Method:    destroy
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_destroy
  (JNIEnv *, jclass, jobject);

/*
 * Class:     Fluidsynth
 * Method:    soundFontLoad
 * Signature: (Ljava/nio/ByteBuffer;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_soundFontLoad
  (JNIEnv *, jobject, jobject, jstring);

/*
 * Class:     Fluidsynth
 * Method:    getProgramsList
 * Signature: (Ljava/nio/ByteBuffer;)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_Fluidsynth_getProgramsList
  (JNIEnv *, jclass, jobject);

/*
 * Class:     Fluidsynth
 * Method:    noteOn
 * Signature: (Ljava/nio/ByteBuffer;III)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_noteOn
  (JNIEnv *, jclass, jobject, jint, jint, jint);

/*
 * Class:     Fluidsynth
 * Method:    noteOff
 * Signature: (Ljava/nio/ByteBuffer;II)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_noteOff
  (JNIEnv *, jclass, jobject, jint, jint);

/*
 * Class:     Fluidsynth
 * Method:    controlChange
 * Signature: (Ljava/nio/ByteBuffer;III)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_controlChange
  (JNIEnv *, jclass, jobject, jint, jint, jint);

/*
 * Class:     Fluidsynth
 * Method:    pitchBend
 * Signature: (Ljava/nio/ByteBuffer;II)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_pitchBend
  (JNIEnv *, jclass, jobject, jint, jint);

/*
 * Class:     Fluidsynth
 * Method:    programChange
 * Signature: (Ljava/nio/ByteBuffer;II)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_programChange
  (JNIEnv *, jclass, jobject, jint, jint);

/*
 * Class:     Fluidsynth
 * Method:    setGain
 * Signature: (Ljava/nio/ByteBuffer;F)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_setGain
  (JNIEnv *, jclass, jobject, jfloat);

/*
 * Class:     Fluidsynth
 * Method:    setInterpolate
 * Signature: (Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_setInterpolate
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     Fluidsynth
 * Method:    setReverbOn
 * Signature: (Ljava/nio/ByteBuffer;Z)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_setReverbOn
  (JNIEnv *, jclass, jobject, jboolean);

/*
 * Class:     Fluidsynth
 * Method:    setReverb
 * Signature: (Ljava/nio/ByteBuffer;DDDD)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_setReverb
  (JNIEnv *, jclass, jobject, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     Fluidsynth
 * Method:    setChorusOn
 * Signature: (Ljava/nio/ByteBuffer;Z)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_setChorusOn
  (JNIEnv *, jclass, jobject, jboolean);

/*
 * Class:     Fluidsynth
 * Method:    setChorus
 * Signature: (Ljava/nio/ByteBuffer;IDDDI)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_setChorus
  (JNIEnv *, jclass, jobject, jint, jdouble, jdouble, jdouble, jint);

/*
 * Class:     Fluidsynth
 * Method:    setTuning
 * Signature: (Ljava/nio/ByteBuffer;IILjava/lang/String;[D)V
 */
JNIEXPORT void JNICALL Java_Fluidsynth_setTuning
  (JNIEnv *, jclass, jobject, jint, jint, jstring, jdoubleArray);

/*
 * Class:     Fluidsynth
 * Method:    getAudioDrivers
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_Fluidsynth_getAudioDrivers
  (JNIEnv *, jclass);

/*
 * Class:     Fluidsynth
 * Method:    getAudioDevices
 * Signature: (Ljava/lang/String;)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_Fluidsynth_getAudioDevices
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
